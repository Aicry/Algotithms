#include<iostream>
#include <vector>
using namespace std;
int main()
{
	int  n;
	cin >> n;
	vector<int> a(n), b(n), c(n), d(n);
	for (int i = 0; i < n; ++i)
		cin >> a[i] >> b[i] >> c[i] >> d[i];

	int x, y;
	cin >> x >> y;
	for (int i = n - 1; i >= 0; --i)
		if (x >= a[i] && x <= c[i] + a[i] && y >= b[i] && y <= d[i] + b[i])
		{
			cout << i + 1;
			return 0;
		}
	cout << "-1";
	return 0;
}

/*题目描述
为了准备一个独特的颁奖典礼，组织者在会场的一片矩形区域（可看做是平面直角坐标系的第一象限）铺上一些矩形地毯。一共有 nn 张地毯，编号从 11 到 nn。现在将这些地毯按照编号从小到大的顺序平行于坐标轴先后铺设，后铺的地毯覆盖在前面已经铺好的地毯之上。

地毯铺设完成后，组织者想知道覆盖地面某个点的最上面的那张地毯的编号。注意：在矩形地毯边界和四个顶点上的点也算被地毯覆盖。

输入格式
输入共 n + 2n+2 行。

第一行，一个整数 nn，表示总共有 nn 张地毯。

接下来的 nn 行中，第 i+1i+1 行表示编号 ii 的地毯的信息，包含四个整数 a ,b ,g ,ka,b,g,k，每两个整数之间用一个空格隔开，分别表示铺设地毯的左下角的坐标 (a, b)(a,b) 以及地毯在 xx 轴和 yy 轴方向的长度。

第 n + 2n+2 行包含两个整数 xx 和 yy，表示所求的地面的点的坐标 (x, y)(x,y)。

输出格式
输出共 11 行，一个整数，表示所求的地毯的编号；若此处没有被地毯覆盖则输出 -1。

输入输出样例
输入 #1复制
3
1 0 2 3
0 2 3 3
2 1 3 3
2 2
输出 #1复制
3

输入 #2复制
3
1 0 2 3
0 2 3 3
2 1 3 3
4 5
输出 #2复制
-1
说明/提示
【样例解释 1】

如下图，11 号地毯用实线表示，22 号地毯用虚线表示，33 号用双实线表示，覆盖点 (2,2)(2,2) 的最上面一张地毯是 33 号地毯。



【数据范围】

对于 30\%30% 的数据，有 n \le 2n≤2。
对于 50\%50% 的数据，0 \le a, b, g, k \le 1000≤a,b,g,k≤100。
对于 100\%100% 的数据，有 0 \le n \le 10^40≤n≤10 
4
 , 0 \le a, b, g, k \le {10}^50≤a,b,g,k≤10 
5
 。

noip2011 提高组 day1 第 11 题。*/